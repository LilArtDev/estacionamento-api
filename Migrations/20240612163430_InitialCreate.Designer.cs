// <auto-generated />
using System;
using EstacionamentoAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace estacionamento_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240612163430_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EstacionamentoAPI.Models.Establishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<int>("CarSpaces")
                        .HasColumnType("integer")
                        .HasColumnName("car_spaces");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("document");

                    b.Property<int>("MotorcycleSpaces")
                        .HasColumnType("integer")
                        .HasColumnName("motorcycle_spaces");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telephone");

                    b.HasKey("Id")
                        .HasName("pk_tb_establishments");

                    b.ToTable("tb_establishments");
                });

            modelBuilder.Entity("EstacionamentoAPI.Models.Movimentations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_time");

                    b.Property<int>("EstablishmentId")
                        .HasColumnType("integer")
                        .HasColumnName("establishment_id");

                    b.Property<int>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_id");

                    b.HasKey("Id")
                        .HasName("pk_tb_movimentations");

                    b.HasIndex("EstablishmentId")
                        .HasDatabaseName("ix_tb_movimentations_establishment_id");

                    b.HasIndex("VehicleId")
                        .HasDatabaseName("ix_tb_movimentations_vehicle_id");

                    b.ToTable("tb_movimentations");
                });

            modelBuilder.Entity("EstacionamentoAPI.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("license_plate");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_tb_vehicles");

                    b.ToTable("tb_vehicles");
                });

            modelBuilder.Entity("EstacionamentoAPI.Models.Movimentations", b =>
                {
                    b.HasOne("EstacionamentoAPI.Models.Establishment", "Establishment")
                        .WithMany()
                        .HasForeignKey("EstablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tb_movimentations_tb_establishments_establishment_id");

                    b.HasOne("EstacionamentoAPI.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tb_movimentations_vehicles_vehicle_id");

                    b.Navigation("Establishment");

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
